{
  "home": "Home",
  "products": "Products",
  "users": "Customers",
  "adminDashboard": "Admin Dashboard",
  "account": "Account",
  "logout": "Logout",
  "add": "Add",
  "catalog": {
    "title": "Product Catalog",
    "description": "Discover our assortment of artisanal baked goods, made with love and care for every customer."
  },
  "story": {
    "title": "Our Story",
    "description": "Our bakery was founded in 2010 with one simple mission: to share the joy of homemade baking with everyone. Since then, we've been using only natural ingredients and traditional methods of preparation so that each piece was filled with warmth and care. Enjoy the aroma of fresh bread, colorful pastries, and sweet treats created with love by our craftsmen."
  },
  "contacts": {
    "socialMedia": "Follow Us",
    "address": "Address",
    "phone": "Phone",
    "email": "Email"
  },

  "productCard": {
    "category": "Category",
    "description": "Description",
    "addToCart": "Add to Cart",
    "inCart": "In Cart",
    "details": "Product Details",
    "composition": "Composition",
    "calories": "Calories",
    "carbohydrates": "Carbohydrates",
    "protein": "Protein",
    "fat": "Fat",
    "price": "Price",
    "close": "Close"
  },

  "product": {
    "category": "Category",
    "name": {
      "en": "Name (English)",
      "ru": "Name (Russian)",
      "uk": "Name (Ukrainian)",
      "pl": "Name (Polish)"
    },
    "description": {
      "en": "Description (English)",
      "ru": "Description (Russian)",
      "uk": "Description (Ukrainian)",
      "pl": "Description (Polish)"
    },
    "composition": {
      "en": "Composition (English)",
      "ru": "Composition (Russian)",
      "uk": "Composition (Ukrainian)",
      "pl": "Composition (Polish)"
    },
    "calories": "Calories",
    "price": "Price",
    "imageUrl": "Image URL",

    "confirmDeleteMessage": "Are you sure you want to delete this product?",
    "cancel": "Cancel",
    "delete": "Delete"
  },
  "productEdit": {
    "editProduct": "Edit Product",
    "save": "Save",
    "cancel": "Cancel",
    "noChanges": "No changes",
    "noChangesDescription": "No changes were detected.",
    "success": {
      "productUpdated": "Product successfully updated"
    },
    "error": {
      "updateProduct": "Failed to update product",
      "unexpected": "An unexpected error occurred"
    }
  },
  "productCreate": {
    "createProduct": "Create Product",
    "createButton": "Create"
  },

  "productList": {
    "createProduct": "Create New Product",
    "addProduct": "Add Product"
  },

  "categories": {
    "bread": "Bread",
    "pastry": "Pastry",
    "cake": "Cake"
  },

  "filters": {
    "priceRange": "Price Range",
    "minPrice": "Min",
    "maxPrice": "Max",
    "calorieRange": "Calorie Range",
    "minCalories": "Min",
    "maxCalories": "Max",
    "category": "Category",
    "all": "All",
    "bread": "Bread",
    "pastry": "Pastry",
    "cake": "Cake",
    "sortBy": "Sort",
    "resetFilters": "Reset Filters",
    "searchPlaceholder": "Enter at least 3 characters for search"
  },

  "sort": {
    "sortBy": "Choose",
    "selectOption": "Select option",
    "price": "Price",
    "calories": "Calories",
    "priceAsc": "Price ascending",
    "priceDesc": "Price descending",
    "caloriesAsc": "Calories ascending",
    "caloriesDesc": "Calories descending"
  },

  "auth": {
    "required": "Required",
    "invalidEmail": "Invalid email address",
    "passwordMin": "Password must be at least 8 characters long",
    "invalidPhone": "Invalid phone number",
    "firstName": "First Name",
    "lastName": "Last Name",
    "email": "Email",
    "password": "Password",
    "phone": "Phone",
    "address": {
      "label": "Address",
      "street": "Street",
      "houseNumber": "House Number",
      "apartmentNumber": "Apartment Number",
      "city": "City"
    },
    "firstNamePlaceholder": "Your first name",
    "lastNamePlaceholder": "Your last name",
    "emailPlaceholder": "Your email",
    "passwordPlaceholder": "Your password",
    "phonePlaceholder": "Your phone number",
    "addressPlaceholder": {
      "street": "Your street",
      "houseNumber": "Your house number",
      "apartmentNumber": "Your apartment number",
      "city": "Your city"
    },
    "register": "Register",
    "login": "Login",
    "loginPrompt": "Don't have an account?",
    "loginError": "Login Error",
    "noSuchUser": "No such user found",
    "invalidCredentials": "Invalid email or password",
    "registrationSuccess": "Registration Successful",
    "registrationSuccessMessage": "You have successfully registered!",
    "registrationError": "Registration Error",
    "registrationErrorMessage": "There was an error registering your account.",
    "missingToken": "Missing authentication token",
    "checkingAuthorization": "Checking authorization..."
  },

  "userProfile": {
    "edit": "Edit Profile",
    "save": "Save Changes",
    "cancel": "Cancel",
    "error": {
      "fetch": "Failed to fetch user profile.",
      "update": "Failed to update profile."
    },
    "success": {
      "update": "Profile updated successfully."
    }
  },

  "user": {
    "profile": "Profile",
    "orders": "Orders",
    "orderHistory": "Order History",
    "saveChanges": "Save Changes",
    "name": "Name",
    "email": "Email",
    "phone": "Phone",
    "address": "Address",
    "city": "city",
    "street": "St.",
    "houseNumber": "No.",
    "apartmentNumber": "Apt.",
    "currentOrders": "Current Orders",
    "deliveredOrders": "Delivered Orders",
    "tabProfile": "Profile",
    "tabOrders": "Orders",
    "tabOrderHistory": "Order History",
    "noData": "No user data available.",
    "deleted": "Deleted User",
    "backToList": "Back to List",
    "logout": "Logout"
  },

  "userSearch": {
    "label": "Search User",
    "placeholder": "Search by name, email or phone"
  },

  "userList": {
    "heading": "User List",
    "loading": "Loading users...",
    "name": "Name",
    "email": "Email",
    "role": "Role",
    "actions": "Actions",
    "viewProfile": "View Profile",
    "edit": "Edit",
    "delete": "Delete",
    "deleteConfirmationTitle": "Delete User",
    "deleteConfirmationMessage": "Are you sure you want to delete this user?",
    "deleteSuccess": "User successfully deleted",
    "deleteError": "Error deleting user.",
    "fetchError": "Error fetching users."
  },

  "userDelete": {
    "confirmDeletion": "Confirm Deletion",
    "confirmMessage": "Are you sure you want to delete user {{userName}}? This action cannot be undone.",
    "cancel": "Cancel",
    "confirmDelete": "Confirm Delete"
  },
  "cart": {
    "cart": "Cart",
    "addToCart": "Add to Cart",
    "delete": "Delete",
    "details": "Details",
    "price": "Price",
    "proceedToCheckout": "Proceed to Checkout",
    "selectDeliveryOption": "Select a delivery option",
    "cartSummary": "Cart Summary",
    "totalItems": "Total Items",
    "totalPrice": "Total Price",
    "emptyCart": "Your cart is empty.",
    "authRequired": "You need to be logged in to proceed to checkout."
  },
  "checkout": {
    "success": "Order Successful",
    "created": "Your order has been created.",
    "error": "Order Error",
    "errorCreating": "There was an error creating your order.",
    "placeOrder": "Place Order",
    "useHomeAddress": "Use home address"
  },
  "order": {
    "orderId": "Order ID",
    "orderDetails": "Order details",
    "date": "Order date",
    "total": "Total",
    "itemUpdated": "Order updated successfully",
    "errorUpdating": "Error updating order",
    "editItem": "Edit Item",
    "quantity": "Quantity",
    "save": "Save",
    "cancel": "Cancel",
    "errorFetching": "Error fetching orders",
    "missingToken": "Authentication token is missing",
    "noOrders": "You have no orders.",
    "confirmDelete": "Are you sure you want to delete this item?",
    "deleteItem": "Delete Item",
    "itemDeleted": "Item successfully deleted",
    "delete": "Delete",
    "orderDeleted": "Order successfully deleted",
    "errorDeletingOrder": "Error deleting order",
    "currentStatus": "Current Status",
    "statusUpdated": "Status updated",
    "statusUpdatedDescription": "Order {{orderId}} status updated to {{status}}",
    "errorUpdatingStatus": "Error updating status",
    "errorUpdatingStatusDescription": "Failed to update order status",
    "errorFetchingDescription": "An error occurred while fetching orders",
    "loadingOrders": "Loading orders...",
    "viewDetails": "View Details",
    "editOrder": "Edit Order",
    "deleteOrder": "Delete Order",
    "selectProduct": "Select product",
    "addProduct": "Add Product",
    "productAdded": "Product added",
    "errorInvalidProduct": "You have to select product",
    "items": "Composition of the order",
    "invoice": "Create an invoice",
    "statusLabel": "Status",
    "status": {
      "pending": "Pending",
      "processing": "Processing",
      "shipped": "Shipped",
      "delivered": "Delivered",
      "cancelled": "Cancelled"
    },
    "errorFetchingDetails": "An error occurred while fetching order details.",
    "errorFetchingDetailsDescription": "We couldn't retrieve the order details. Please refresh the page and try again.",
    "confirmDeleteTitle": "Delete Confirmation",
    "confirmDeleteMessage": "Are you sure you want to delete this order?",
    "deleted": "Order Deleted",
    "deletedSuccessfully": "Order was successfully deleted",
    "errorDeleting": "Error Deleting Order",
    "errorDeletingDescription": "Failed to delete order. Please try again later.",
    "changeStatus": "Change Status",
    "searchPlaceholder": "Search orders by user, phone, or number",
    "filterByDate": "Filter by date"
  },
  "novaPoshta": {
    "loading": "Loading...",
    "selectBranch": "Select Nova Poshta branch",
    "branchPlaceholder": "Select a branch...",
    "branchRequired": "Nova Poshta branch is required",
    "deliveryType": "Delivery via Nova Poshta",
    "useNovaPoshta": "Delivery via Nova Poshta",
    "searchCity": "Enter city name...",
    "errorFetchingCities": "Error loading cities",
    "warehouseType": "{{type}}",
    "postomat": "Postomat",
    "branch": "Branch",
    "errorFetchingWarehouses": "Error loading warehouses",
    "searchWarehouse": "Enter address or branch number...",
    "selectedWarehouse": "Selected warehouse",
    "errorNoWarehouse": "Branch with the given code not found",
    "errorFetchingWarehouseByCode": "Error fetching branch by code",
    "warehouseIndex": "Branch code",
    "invalidCodeFormat": "The code must be in the format 'number/number', e.g., '11/329'.",
    "searchByCity": "Enter city and branch number",
    "searchByCode": "Enter branch digital code",
    "placeholderCity": "Address, branch number (e.g., Slobozhanska, 12)",
    "placeholderCode": "Branch digital code (e.g., 11/329)"
  }
}
